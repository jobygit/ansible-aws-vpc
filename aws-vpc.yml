---
- name: "VPC setup"
  ec2_vpc_net:
    name: "{{ vpc_name }}"
    cidr_block: "{{ cidr_vpc }}"
    region: "{{ region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    state: present
  register: vpc


- name: Set VPC ID in variable
  set_fact:
    vpc_id: "{{ vpc.vpc.id }}"

- name: Create Public Subnet A
  ec2_vpc_subnet:
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    cidr: "{{ public_subnetA_cidr }}"
    az: "{{ region }}a"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    map_public: yes
    state: present
    tags:
      Name: "Webserver_subnet"
  register: web_subnet

- name: Create Public Subnet B
  ec2_vpc_subnet:
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    cidr: "{{ public_subnetB_cidr }}"
    az: "{{ region }}b"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    map_public: yes
    state: present
    tags:
      Name: "bastion_subnet"
  register: bastion_subnet

- name: Create Private Subnet C
  ec2_vpc_subnet:
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    cidr: "{{ private_subnetC_cidr }}"
    az: "{{ region }}c"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    state: present
    tags:
      Name: "db_subnet"
  register: db_subnet

- name: Create IGW
  ec2_vpc_igw: 
    vpc_id: "{{ vpc_id }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ region }}"
    state: present
    tags:
      Name: "{{ igw_name }}"
  register: igw

- name: Set route table for Public Subnets
  ec2_vpc_route_table:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    state: present
    vpc_id: "{{ vpc_id }}"
    subnets:
      - "{{ web_subnet.subnet.id }}"
      - "{{ bastion_subnet.subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw.gateway_id }}"

- name: Create nat Gateway in Bastion Subnet
  ec2_vpc_nat_gateway:
    subnet_id: "{{ bastion_subnet.subnet.id }}"
    state: present
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ region }}"
  register: nat_gw

- name: Wait for 5 Seconds
  wait_for: timeout=5

- name: Set Private Subnet[C] Route Table
  ec2_vpc_route_table:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    state: present
    vpc_id: "{{ vpc_id }}"
    subnets:
      - "{{ db_subnet.subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ nat_gw.nat_gateway_id }}"

- name: Create Bastion Security Group
  ec2_group:
    name:  "Bastion-sg"
    description: "Bastion-sg"
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: bastion_sg


- name: Creating Webserver Security Group
  ec2_group:
    name:  "Webserver-sg"
    description: "Webserver-sg"
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    rules:
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
      - proto: "tcp"
        from_port: "22"
        to_port: "22"
        group_id: "{{ bastion_sg.group_id }}"
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: webserver_sg

- name: Creating Database Server Security Group
  ec2_group:
    name: "DB-Server-sg"
    description: "DataBase Server-sg"
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    rules:
      - proto: "tcp"
        from_port: "22"
        to_port: "22"
        group_id: "{{ bastion_sg.group_id }}"
      - proto: "tcp"
        from_port: 3306
        to_port: 3306
        group_id: "{{ webserver_sg.group_id }}"
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0


